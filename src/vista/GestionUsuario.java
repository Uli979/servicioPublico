/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;
import controlador.UsuarioContralador;
import funciones.Encoder;
import funciones.Validaciones;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.UsuarioDTO;
/**
 *
 * @author USUARIO
 */
public class GestionUsuario extends javax.swing.JFrame {
  
    DefaultTableModel modelo;
    private int id;
 
    /**
     * Creates new form GestionUsuario
     * @throws java.sql.SQLException
     */
    public GestionUsuario() throws SQLException {
        initComponents();
         this.setLocationRelativeTo(null);
         UsuarioContralador usuarioContralador=new UsuarioContralador();
         String[] titulos={"id","usuario","contraseña","correo","rol"};
         modelo=new DefaultTableModel(null,titulos);
         tbUsuario.setModel(modelo);
         ArrayList<UsuarioDTO> usuarios=new ArrayList();
         usuarios=usuarioContralador.consultarEmp();
         for (int i = 0; i < usuarios.size(); i++){
             
            Object[] oEmp={usuarios.get(i).getIdUsuario(),usuarios.get(i).getUsuario(),usuarios.get(i).getContraseña(),usuarios.get(i).getCorreo(),usuarios.get(i).getRol()};
            modelo.addRow(oEmp);
    }
    }

    
    public class CrearUsuarioVista extends javax.swing.JFrame {
   DefaultTableModel modelo;
    
    public CrearUsuarioVista() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        UsuarioContralador usuarioContralador=new UsuarioContralador();
        ArrayList usuarios=new ArrayList<>();
        DefaultComboBoxModel combo=new DefaultComboBoxModel();
        cbrol.setModel(combo);
       usuarios=usuarioContralador.consultarEmp();
       Iterator iterador=usuarios.iterator();
            while(iterador.hasNext()){
            
                UsuarioDTO usuario=(UsuarioDTO) iterador.next();
                combo.addElement(usuario);
        
        
        }
        
        txtusuario.setVisible(true);
        txtcontra.setVisible(true);
        txtcorreo.setVisible(true);
        cbrol.setVisible(true);
        
    }
    }

   
    
    public class EditarUsuarioVista extends javax.swing.JFrame {
private int id;
    /**
     * Creates new form EditarUsuarioVista
     */
    public EditarUsuarioVista() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        UsuarioContralador usuarioContralador=new UsuarioContralador();
        ArrayList usuarios=new ArrayList<>();
        DefaultComboBoxModel combo=new DefaultComboBoxModel();
        cbrol.setModel(combo);
        usuarios=usuarioContralador.consultarEmp();
        Iterator iterador=usuarios.iterator();
            while(iterador.hasNext()){
                 combo.addElement(usuarios.get(id).toString());
                 UsuarioDTO usuario=(UsuarioDTO) iterador.next();
                 
                 combo.addElement(usuario);     
            }
    }

        
    }
    private void limpiar()
        {
            txtusuario.setText(" ");
            txtcontra.setText(" ");
            txtcorreo.setText(" ");
           

        }
   
        
    
    

    
    
       
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbUsuario = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtusuario = new javax.swing.JTextField();
        txtcontra = new javax.swing.JTextField();
        txtcorreo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbrol = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbUsuario);

        jButton1.setText("REGRESAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("EDITAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("ELIMINAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("CREAR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("GESTION DE USUARIO");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Usuario");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Contraseña");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Correo");

        txtusuario.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtusuario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtusuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtcontra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtcontra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtcontra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtcorreo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtcorreo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtcorreo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Rol");

        cbrol.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbrol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "admin", "emple" }));
        cbrol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbrolItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("EMPRESA PRESTADORA DE SERVICIOS PUBLICOS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtusuario)
                            .addComponent(txtcontra)
                            .addComponent(txtcorreo)
                            .addComponent(cbrol, javax.swing.GroupLayout.Alignment.TRAILING, 0, 334, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtcontra, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(cbrol, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         principalVista PrincipalVista=new principalVista();
        PrincipalVista.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        UsuarioContralador usuarioControlador=new UsuarioContralador();
        
        tbUsuario.getValueAt(tbUsuario.getSelectedRow(), 0);
        
        tbUsuario.getValueAt(tbUsuario.getSelectedRow(), 0).toString();
        
        Integer.parseInt(tbUsuario.getValueAt(tbUsuario.getSelectedRow(), 0).toString());
        
        boolean flag=usuarioControlador.eliminarUsuario(Integer.parseInt(tbUsuario.getValueAt(tbUsuario.getSelectedRow(), 0).toString()));
        
        if (flag){
            System.out.println("Borrado con Exito");
              JOptionPane.showMessageDialog(null, "Usuario Borrado con exito");
              int count=modelo.getRowCount();
            for (int i = 0; i < count; i++){
               modelo.removeRow(0);
        }
        ArrayList<UsuarioDTO> usuarios=new ArrayList<>();
            try {
                usuarios=usuarioControlador.consultarEmp();
            } catch (SQLException ex) {
                Logger.getLogger(GestionUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        for (int i = 0; i < usuarios.size(); i++){
            
            Object[] oEmp={usuarios.get(i).getIdUsuario(),usuarios.get(i).getUsuario(),usuarios.get(i).getContraseña(),usuarios.get(i).getCorreo(),usuarios.get(i).getRol()};
            modelo.addRow(oEmp);
        
        }
              
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    @SuppressWarnings("UnnecessaryReturnStatement")
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        
        
        UsuarioDTO usuarioDTO=new UsuarioDTO();
            UsuarioContralador usuarioContralador=new UsuarioContralador();
            usuarioDTO.setUsuario(txtusuario.getText());
            usuarioDTO.setContraseña(txtcontra.getText());
            usuarioDTO.setCorreo(txtcorreo.getText());
            usuarioDTO.setRol(cbrol.getSelectedItem().toString());
          
            boolean flag=usuarioContralador.editarUsuario(usuarioDTO);
            if (flag){
                JOptionPane.showMessageDialog(null, "Usuario Actualizado con Exito");
                return;
            
            }
              
        
        
         
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cbrolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbrolItemStateChanged

    }//GEN-LAST:event_cbrolItemStateChanged

    
    @SuppressWarnings("UnnecessaryReturnStatement")
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        UsuarioContralador usuarioContralador=new UsuarioContralador();
        UsuarioDTO usuarioDTO=new UsuarioDTO();
        Encoder encoder=new Encoder();
        Validaciones validaciones=new Validaciones(); 
        if (cbrol.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null,"Seleccione un Rol");
        }else{  
            if(validaciones.validarUsuario(txtusuario.getText())){
            usuarioDTO.setUsuario(txtusuario.getText());
            }else{
                JOptionPane.showMessageDialog(null, "Usuario No Diligenciado Correctamente");
                return;
            }
            usuarioDTO.setContraseña(encoder.encrypt(txtcontra.getText()));
            if(validaciones.validarEmail(txtcorreo.getText())){
            usuarioDTO.setCorreo(txtcorreo.getText());
             }else{
                JOptionPane.showMessageDialog(null, "Correo No Diligenciado Correctamente");
                return;
            }
            usuarioDTO.setRol(cbrol.getSelectedItem().toString());
                
        boolean flag=usuarioContralador.crearUsuario(usuarioDTO);
            if (flag){
                JOptionPane.showMessageDialog(null, "Usuario Creado con Exito");
                return;
                
                 
            
            }
            

            }
            
       
       
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GestionUsuario().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GestionUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbrol;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbUsuario;
    private javax.swing.JTextField txtcontra;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables
  



}
